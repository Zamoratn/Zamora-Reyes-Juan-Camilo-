#include <iostream>
#include <string>
#include <cstdlib> // Para malloc y free

using namespace std;

struct Producto {
    int id;
    string nombre;
    Producto* siguiente;
};

// Puntero a la cabeza de la lista
Producto* Cab = NULL;

// Función para agregar un producto con ID único
void Agregar() {
    int id;
    string nombre;

    cout << "\nIngrese el ID del producto: ";
    cin >> id;

    // Validar si el ID ya existe
    Producto* Aux2 = Cab;
    while (Aux2 != NULL) {
        if (Aux2->id == id) {
            cout << "\nError: Este ID ya está registrado.\n";
            return;
        }
        Aux2 = Aux2->siguiente;
    }

    cout << "Ingrese el nombre del producto: ";
    cin >> nombre;

    // Crear un nuevo nodo usando malloc
    Producto* nuevo = (Producto*)malloc(sizeof(Producto));
    if (nuevo == NULL) {
        cout << "\nError: No se pudo asignar memoria.\n";
        return;
    }
    
    nuevo->id = id;
    nuevo->nombre = nombre;
    nuevo->siguiente = NULL;

    // Insertar en la lista
    if (Cab == NULL) {
        Cab = nuevo;
    } else {
        Aux2 = Cab;
        while (Aux2->siguiente != NULL) {
            Aux2 = Aux2->siguiente;
        }
        Aux2->siguiente = nuevo;
    }

    cout << "\nProducto agregado correctamente.\n";
}

// Función para mostrar todos los productos
void Mostrar() {
    if (Cab == NULL) {
        cout << "\nNo hay productos registrados.\n";
        return;
    }

    cout << "\nLista de productos:\n";
    Producto* Aux2 = Cab;
    while (Aux2 != NULL) {
        cout << "ID: " << Aux2->id << ", Nombre: " << Aux2->nombre << "\n";
        Aux2 = Aux2->siguiente;
    }
}

// Función para buscar un producto por ID
void Buscar() {
    if (Cab == NULL) {
        cout << "\nNo hay productos registrados.\n";
        return;
    }

    int id;
    cout << "\nIngrese el ID a buscar: ";
    cin >> id;

    Producto* Aux2 = Cab;
    while (Aux2 != NULL) {
        if (Aux2->id == id) {
            cout << "\nProducto encontrado -> ID: " << Aux2->id << ", Nombre: " << Aux2->nombre << "\n";
            return;
        }
        Aux2 = Aux2->siguiente;
    }

    cout << "\nProducto no encontrado.\n";
}

// Función para eliminar un producto por ID
void Eliminar() {
    if (Cab == NULL) {
        cout << "\nNo hay productos registrados.\n";
        return;
    }

    int id;
    cout << "\nIngrese el ID del producto a eliminar: ";
    cin >> id;

    Producto* Aux2 = Cab;
    Producto* anterior = NULL;

    while (Aux2 != NULL) {
        if (Aux2->id == id) {
            if (anterior == NULL) {
                Cab = Aux2->siguiente;
            } else {
                anterior->siguiente = Aux2->siguiente;
            }
            free(Aux2);
            cout << "\nProducto eliminado correctamente.\n";
            return;
        }
        anterior = Aux2;
        Aux2 = Aux2->siguiente;
    }

    cout << "\nProducto no encontrado.\n";
}

// Función para contar los productos en la lista
void Contar() {
    int contador = 0;
    Producto* Aux2 = Cab;

    while (Aux2 != NULL) {
        contador++;
        Aux2 = Aux2->siguiente;
    }

    cout << "\nTotal de productos registrados: " << contador << "\n";
}

// Función para modificar un producto por ID
void Modificar() {
    if (Cab == NULL) {
        cout << "\nNo hay productos registrados.\n";
        return;
    }

    int id;
    cout << "\nIngrese el ID del producto a modificar: ";
    cin >> id;

    Producto* Aux2 = Cab;
    while (Aux2 != NULL) {
        if (Aux2->id == id) {
            cout << "\nIngrese el nuevo nombre: ";
            cin >> Aux2->nombre;
            cout << "\nProducto modificado correctamente.\n";
            return;
        }
        Aux2 = Aux2->siguiente;
    }

    cout << "\nProducto no encontrado.\n";
}

// Función para mostrar el menú
void MostrarMenu() {
    cout << "\n=== MENÚ ===\n";
    cout << "1. Agregar producto\n";
    cout << "2. Mostrar productos\n";
    cout << "3. Buscar producto\n";
    cout << "4. Eliminar producto\n";
    cout << "5. Contar productos\n";
    cout << "6. Modificar producto\n";
    cout << "0. Salir\n";
}

// Menú principal
int main() {
    int opcion;
    do {
        MostrarMenu();
        cout << "Seleccione una opción: ";
        cin >> opcion;

        switch (opcion) {
            case 1: Agregar(); break;
            case 2: Mostrar(); break;
            case 3: Buscar(); break;
            case 4: Eliminar(); break;
            case 5: Contar(); break;
            case 6: Modificar(); break;
            case 0: cout << "\nSaliendo del programa...\n"; break;
            default: cout << "\nOpción inválida. Intente nuevamente.\n";
        }
        cout << "\nPresione ENTER para continuar...";
        cin.ignore();
        cin.get();
    } while (opcion != 0);

    return 0;
}
